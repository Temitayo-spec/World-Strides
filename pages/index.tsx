import type { NextPage } from "next";
import Head from "next/head";
import { CssBaseline, Grid } from "@material-ui/core";
import styles from "../styles/Home.module.css";
import { Header, Map, Sidebar } from "../components";
import { getPlacesData, getWeatherData } from "../axios";
import { useEffect, useState } from "react";

const Home: NextPage = () => {
  const [coordinates, setCoordinates] = useState({ lat: 0, lng: 0 }),
    [clickedChild, setClickedChild] = useState(null),
    [loading, setLoading] = useState(false),
    [type, setType] = useState("restaurants"),
    [rating, setRating] = useState(0),
    [filteredPlaces, setFilteredPlaces] = useState([]),
    [bounds, setBounds] = useState({
      ne: { lat: 0, lng: 0 },
      sw: { lat: 0, lng: 0 },
    }),
    [allPlaces, setAllPlaces] = useState([]),
    [weatherData, setWeatherData] = useState([]);

  useEffect(() => {
    navigator.geolocation.getCurrentPosition(
      ({ coords: { latitude, longitude } }) => {
        setCoordinates({ lat: latitude, lng: longitude });
      }
    );
  }, []);

  useEffect(() => {
    const filteredPlaces = allPlaces.filter(
      (place: any) => place.rating > rating
    );
    setFilteredPlaces(filteredPlaces);
  }, [rating]);

  useEffect(() => {
    if (bounds.sw && bounds.ne) {
      setLoading(true);
      const getData = async () => {
        const places = await getPlacesData(
            type,
            bounds?.ne as any,
            bounds?.sw as any
          ),
          weather = await getWeatherData(coordinates?.lat, coordinates?.lng);
        setWeatherData(weather as any);

        setAllPlaces(
          places?.filter((place: any) => place.name && place.num_reviews > 0)
        );
        setFilteredPlaces([]);
        setLoading(false);
      };
      getData();
    }
  }, [bounds, coordinates?.lat, coordinates?.lng, type]);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <CssBaseline />
        <Header setCoordinates={setCoordinates} />
        <Grid container spacing={3} style={{ width: "100%" }}>
          <Grid item xs={12} md={4}>
            <Sidebar
              places={filteredPlaces.length > 0 ? filteredPlaces : allPlaces}
              clickedChild={clickedChild}
              loading={loading}
              type={type}
              setType={setType}
              rating={rating}
              setRating={setRating}
            />
          </Grid>
          <Grid item xs={12} md={8}>
            <Map
              setCoordinates={setCoordinates}
              setBounds={setBounds}
              coordinates={coordinates}
              places={filteredPlaces.length > 0 ? filteredPlaces : allPlaces}
              setClickedChild={setClickedChild}
              weatherData={weatherData}
            />
          </Grid>
        </Grid>
      </main>
    </div>
  );
};

export default Home;

// export const getServerSideProps = async (context) => {
//   const res = await getPlacesData();
//   return {
//     props: {
//       places: res,
//     },
//   };
// };
